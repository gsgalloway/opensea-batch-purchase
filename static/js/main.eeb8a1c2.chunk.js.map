{"version":3,"sources":["GlobalStyle.ts","NFTForm.tsx","ManageListModal.tsx","TokenList.tsx","gnosis-abi.ts","App.tsx","index.tsx"],"names":["GlobalStyle","createGlobalStyle","avertaFont","avertaBoldFont","Container","styled","div","NFTForm","tokenID","tokenContractAddress","onTokenIDChanged","onTokenContractAddressChanged","size","id","label","value","onChange","e","target","input","type","pattern","min","SearchInput","theme","fonts","fontFamily","BodyHeader","colors","separator","SearchContainer","StyledItem","StyledImage","img","StyledImageName","FormContainer","TextDesc","Text","UnstyledButton","button","StyledDivider","Divider","ManageList","title","itemList","showDeleteButton","defaultIconUrl","formBody","addButtonLabel","isSubmitFormDisabled","onSubmitForm","onItemToggle","onItemDeleted","onClose","useState","search","setSearch","isFormMode","setIsFormMode","setDefaultImage","onerror","src","body","event","placeholder","color","variant","onClick","length","filter","i","name","toLowerCase","includes","description","map","alt","onError","iconUrl","strong","checked","orientation","disabled","isDeletable","footer","okText","okDisabled","handleCancel","handleOk","withoutBodyPadding","loadTokenAssets","tokens","networkName","apiKey","a","seaport","OpenSeaPort","InfuraProvider","Promise","all","token","api","getAsset","tokenAddress","contractAddress","tokenId","toString","assets","TokenList","network","useQuery","isLoading","data","error","alert","undefined","Error","buildCellsForRow","asset","cheapestOrder","_","minBy","sellOrders","order","basePrice","toNumber","content","formatEther","imageUrl","rows","cells","gnosisSafeABI","inputs","stateMutability","anonymous","indexed","internalType","outputs","loadNetwork","provider","getNetwork","getProvider","providers","Web3Provider","window","ethereum","getOpenseaParams","openseaApiKey","openseaNetworkName","process","OpenseaNetwork","Main","Rinkeby","SafeApp","safe","useSafeAppsSDK","isOpen","setIsOpen","setTokens","inputTokenID","setInputTokenID","inputTokenContractAddress","setInputTokenContractAddress","isTransactionBuilderLoading","setIsTransactionBuilderLoading","submitTx","useCallback","enable","signer","getSigner","openseaBulkPurchaser","OpenseaBulkPurchaser","createSingleTokenPurchase","safeAddress","purchaseTxs","createBatchTransactionFromPurchases","batchTx","safeContract","Contract","safeTxHash","calculateSafeTransactionHash","chainId","signHash","signature","safeServiceURL","safeService","SafeServiceClient","ethSafeTx","EthSafeTransaction","baseGas","BigNumber","from","gasPrice","gasToken","nonce","operation","refundReceiver","safeTxGas","to","addSignature","EthSignSignature","getAddress","safeTransaction","senderAddress","proposeTransaction","console","isNetworkLoading","ManageListModal","Array","entries","index","itemId","newTokens","splice","queryClient","QueryClient","ReactDOM","render","StrictMode","loader","client","App","document","getElementById"],"mappings":"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,YAER,CACEgH,OAAQ,CACN,CACEI,aAAc,UACdjE,KAAM,KACNnD,KAAM,WAER,CACEoH,aAAc,UACdjE,KAAM,QACNnD,KAAM,WAER,CACEoH,aAAc,QACdjE,KAAM,OACNnD,KAAM,SAER,CACEoH,aAAc,sBACdjE,KAAM,YACNnD,KAAM,SAER,CACEoH,aAAc,UACdjE,KAAM,YACNnD,KAAM,WAER,CACEoH,aAAc,UACdjE,KAAM,UACNnD,KAAM,WAER,CACEoH,aAAc,UACdjE,KAAM,WACNnD,KAAM,WAER,CACEoH,aAAc,UACdjE,KAAM,WACNnD,KAAM,WAER,CACEoH,aAAc,UACdjE,KAAM,iBACNnD,KAAM,WAER,CACEoH,aAAc,UACdjE,KAAM,SACNnD,KAAM,YAGVmD,KAAM,wBACNkE,QAAS,CACP,CACED,aAAc,QACdjE,KAAM,GACNnD,KAAM,UAGViH,gBAAiB,OACjBjH,KAAM,YAER,CACEgH,OAAQ,CACN,CACEI,aAAc,UACdjE,KAAM,KACNnD,KAAM,WAER,CACEoH,aAAc,UACdjE,KAAM,QACNnD,KAAM,WAER,CACEoH,aAAc,QACdjE,KAAM,OACNnD,KAAM,SAER,CACEoH,aAAc,sBACdjE,KAAM,YACNnD,KAAM,SAER,CACEoH,aAAc,UACdjE,KAAM,YACNnD,KAAM,WAER,CACEoH,aAAc,UACdjE,KAAM,UACNnD,KAAM,WAER,CACEoH,aAAc,UACdjE,KAAM,WACNnD,KAAM,WAER,CACEoH,aAAc,UACdjE,KAAM,WACNnD,KAAM,WAER,CACEoH,aAAc,kBACdjE,KAAM,iBACNnD,KAAM,WAER,CACEoH,aAAc,QACdjE,KAAM,aACNnD,KAAM,UAGVmD,KAAM,kBACNkE,QAAS,CACP,CACED,aAAc,OACdjE,KAAM,UACNnD,KAAM,SAGViH,gBAAiB,UACjBjH,KAAM,YAER,CACEgH,OAAQ,CACN,CACEI,aAAc,UACdjE,KAAM,KACNnD,KAAM,WAER,CACEoH,aAAc,UACdjE,KAAM,QACNnD,KAAM,WAER,CACEoH,aAAc,QACdjE,KAAM,OACNnD,KAAM,SAER,CACEoH,aAAc,sB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","file":"static/js/main.eeb8a1c2.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components'\nimport avertaFont from '@gnosis.pm/safe-react-components/dist/fonts/averta-normal.woff2'\nimport avertaBoldFont from '@gnosis.pm/safe-react-components/dist/fonts/averta-bold.woff2'\n\nconst GlobalStyle = createGlobalStyle`\n    html {\n        height: 100%\n    }\n\n    body {\n       height: 100%;\n       margin: 0px;\n       padding: 0px;\n    }\n\n    #root {\n        height: 100%;\n        padding-right: 0.5rem;\n    }\n\n    .MuiFormControl-root,\n    .MuiInputBase-root {\n        width: 100% !important;\n    }\n\n    @font-face {\n        font-family: 'Averta';\n        src: local('Averta'), local('Averta Bold'),\n        url(${avertaFont}) format('woff2'),\n        url(${avertaBoldFont}) format('woff');\n    }\n`\n\nexport default GlobalStyle\n","import { Text, TextField } from \"@gnosis.pm/safe-react-components\";\nimport styled from 'styled-components'\n\ntype Props = {\n    tokenID: string,\n    tokenContractAddress: string,\n    onTokenIDChanged: (tokenID: string) => void,\n    onTokenContractAddressChanged: (tokenContractAddress: string) => void,\n};\n\nconst Container = styled.div`\n  padding: 1rem;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n`\n\nconst NFTForm = ({tokenID, tokenContractAddress, onTokenIDChanged, onTokenContractAddressChanged}: Props): React.ReactElement => {\n    return <>\n        <Container>\n            <Text size=\"lg\">Enter token ID (a number) and the token's contract address <br/>Ex: '0x059edd72cd353df5106d2b9cc5ab83a52287ac3a' for Artblocks</Text>\n            <br />\n            <TextField\n                id=\"standard-name\"\n                label=\"Token Contract Address\"\n                value={tokenContractAddress}\n                onChange={(e) => onTokenContractAddressChanged(e.target.value)}\n                input={{ type: 'text', pattern: \"[A-Za-z]{3}\" }}\n            />\n            <br />\n            <TextField\n                id=\"standard-name\"\n                label=\"Token ID\"\n                value={tokenID}\n                onChange={(e) => onTokenIDChanged(e.target.value)}\n                input={{ type: 'number', min: 0  }}\n            />\n        </Container>\n    </>\n}\n\nexport default NFTForm;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { Divider } from '@gnosis.pm/safe-react-components';\n\nimport {\n  GenericModal,\n  Icon,\n  Text,\n  Button,\n  Switch,\n  ModalFooterConfirmation,\n} from '@gnosis.pm/safe-react-components';\n\nconst SearchInput = styled.input`\n  border: none;\n  background-color: transparent;\n  box-shadow: none;\n  font-family: ${({ theme }) => theme.fonts.fontFamily};\n  width: 250px;\n\n  :focus {\n    outline: none;\n  }\n`;\n\nconst BodyHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border-bottom: 2px solid ${({ theme }) => theme.colors.separator};\n  padding: 0 24px;\n`;\n\nconst SearchContainer = styled.div`\n  display: flex;\n  align-items: center;\n  height: 52px;\n  border-right: 2px solid ${({ theme }) => theme.colors.separator};\n`;\n\nconst StyledItem = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0px 24px;\n  height: 51px;\n  border-bottom: 2px solid ${({ theme }) => theme.colors.separator};\n\n  :last-child {\n    border-bottom: 0px;\n  }\n`;\n\nconst StyledImage = styled.img`\n  width: 26px;\n  height: 26px;\n  object-fit: contain;\n  margin: 0 16px 0 0;\n`;\n\nconst StyledImageName = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst FormContainer = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 24px;\n`;\n\nconst TextDesc = styled(Text)`\n  width: 350px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nconst UnstyledButton = styled.button`\n  background: none;\n  color: inherit;\n  border: none;\n  cursor: pointer;\n  padding: 0;\n  outline-color: ${({ theme }) => theme.colors.separator};\n`;\n\nconst StyledDivider = styled(Divider)`\n  height: 30px;\n`;\n\ntype Props = {\n  title?: string;\n  defaultIconUrl: string;\n  showDeleteButton?: boolean;\n  itemList: Array<{\n    id: number | string;\n    iconUrl: string;\n    name: string;\n    description?: string;\n    checked: boolean;\n    isDeletable?: boolean;\n  }>;\n  addButtonLabel?: string;\n  formBody: React.ReactNode;\n  isSubmitFormDisabled?: boolean;\n  onSubmitForm: () => void;\n  onItemToggle: (itemId: number | string, checked: boolean) => void;\n  onItemDeleted?: (itemId: number | string) => void;\n  onClose: () => void;\n};\n\nconst ManageList = ({\n  title = 'Manage List',\n  itemList,\n  showDeleteButton,\n  defaultIconUrl,\n  formBody,\n  addButtonLabel = 'add',\n  isSubmitFormDisabled = false,\n  onSubmitForm,\n  onItemToggle,\n  onItemDeleted,\n  onClose,\n}: Props): JSX.Element => {\n  const [search, setSearch] = useState('');\n  const [isFormMode, setIsFormMode] = useState(false);\n\n  const setDefaultImage = (e: React.SyntheticEvent<HTMLImageElement>): void => {\n    (e.target as HTMLImageElement).onerror = null;\n    (e.target as HTMLImageElement).src = defaultIconUrl;\n  };\n\n  const getFilteredItemList = () => {\n    if (!search || !search.length) {\n      return itemList;\n    }\n\n    return itemList.filter(\n      (i) =>\n        i.name.toLowerCase().includes(search.toLowerCase()) ||\n        i.description?.toLowerCase().includes(search.toLowerCase())\n    );\n  };\n\n  const getBody = () => {\n    return isFormMode ? (\n      <FormContainer>{formBody}</FormContainer>\n    ) : (\n      <>\n        <BodyHeader>\n          <SearchContainer>\n            <Icon size=\"md\" type=\"search\" />\n            <SearchInput\n              onChange={(event) => setSearch(event.target.value)}\n              placeholder=\"Search\"\n              value={search}\n            />\n          </SearchContainer>\n          <Button\n            size=\"md\"\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={() => setIsFormMode(!isFormMode)}>\n            <Text size=\"lg\" color=\"white\">\n              + {addButtonLabel}\n            </Text>\n          </Button>\n        </BodyHeader>\n        <div>\n          {getFilteredItemList().map((i) => {\n            const onChange = (checked: boolean) => onItemToggle(i.id, checked);\n            const onDeleteClick = () => onItemDeleted?.(i.id);\n\n            return (\n              <StyledItem key={i.id}>\n                {/* Item description */}\n                <StyledImageName>\n                  <StyledImage\n                    alt={i.name}\n                    onError={setDefaultImage}\n                    src={i.iconUrl}\n                  />\n                  <div>\n                    <div>\n                      <Text size=\"lg\" strong>\n                        {i.name}\n                      </Text>\n                    </div>\n                    <div>\n                      <TextDesc size=\"md\">\n                        {i.description && i.description}\n                      </TextDesc>\n                    </div>\n                  </div>\n                </StyledImageName>\n\n                {/* Switch */}\n                <Switch checked={i.checked} onChange={onChange} />\n\n                {/* Delete button */}\n                {showDeleteButton && (\n                  <>\n                    <StyledDivider orientation=\"vertical\" />\n                    <UnstyledButton\n                      onClick={onDeleteClick}\n                      disabled={!i.isDeletable}>\n                      <Icon\n                        size=\"md\"\n                        color={i.isDeletable ? 'error' : 'icon'}\n                        type=\"delete\"\n                      />\n                    </UnstyledButton>\n                  </>\n                )}\n              </StyledItem>\n            );\n          })}\n        </div>\n      </>\n    );\n  };\n\n  const getFooter = () => {\n    return !isFormMode ? null : (\n      <ModalFooterConfirmation\n        okText=\"Save\"\n        okDisabled={isSubmitFormDisabled}\n        handleCancel={() => setIsFormMode(false)}\n        handleOk={() => {\n          setIsFormMode(false);\n          onSubmitForm();\n        }}\n      />\n    );\n  };\n\n  return (\n    <GenericModal\n      onClose={onClose}\n      title={title}\n      body={getBody()}\n      footer={getFooter()}\n      withoutBodyPadding\n    />\n  );\n};\n\nexport default ManageList;\n","import { Loader, Table, TableAlignment, TableRow, Text } from \"@gnosis.pm/safe-react-components\"\nimport { TokenDescription } from \"./types\"\nimport { OpenSeaPort } from \"opensea-js\";\nimport { Network, OpenSeaAsset } from \"opensea-js/lib/types\";\nimport { formatEther } from \"@ethersproject/units\";\nimport { InfuraProvider } from \"@ethersproject/providers\";\nimport { useQuery } from 'react-query';\nimport _ from \"lodash\";\n\ntype Props = {\n    tokens: Array<TokenDescription>,\n    network: Network,\n    apiKey: string,\n}\n\ntype RowCell = {\n    id?: string;\n    alignment?: TableAlignment;\n    content: React.ReactNode;\n};\n\nconst loadTokenAssets = async (tokens: TokenDescription[], networkName: Network, apiKey?: string) => {\n    const seaport = new OpenSeaPort(new InfuraProvider(), {networkName, apiKey});\n    const assets = await Promise.all(tokens.map((token: TokenDescription) => {\n        return seaport.api.getAsset({tokenAddress: token.contractAddress, tokenId: token.id.toString()})\n    }));\n    return assets;\n}\n\nconst TokenList = ({tokens, network, apiKey}: Props): React.ReactElement => {\n    const { isLoading, data, error } = useQuery(['loadTokenAssets', tokens], () => loadTokenAssets(tokens, network, apiKey))\n    if (isLoading) {\n        return <Loader size=\"lg\" />\n    }\n    if (error) {\n        alert(error);\n        return <></>;\n    }\n    if (data === undefined) {\n        throw new Error(\"data is undefined\")\n    }\n\n    const buildTableRows = (): TableRow[] => {\n        return data.map((asset): TableRow => {\n            return {\n                id: asset.tokenId ?? \"\",\n                cells: buildCellsForRow(asset),\n            }\n        })\n    }\n\n    const buildCellsForRow = (asset: OpenSeaAsset): RowCell[] => {\n        const cheapestOrder = _.minBy(asset.sellOrders, (order) =>\n            order.basePrice.toNumber()\n        );\n        return [{\n            content: <Text size=\"lg\">{asset.name}</Text>\n        }, {\n            content: <Text size=\"lg\">Price: Ξ{formatEther(cheapestOrder?.basePrice.toString() ?? \"-1\").toString()}</Text>\n        },{\n            content: <img src={asset.imageUrl} alt={asset.imageUrl} />\n        }];\n    }\n\n    return <>\n        <Table rows={buildTableRows()} />\n    </>\n}\n\nexport default TokenList","export const gnosisSafeABI = [\n    {\n      inputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"constructor\",\n    },\n    {\n      anonymous: false,\n      inputs: [\n        {\n          indexed: false,\n          internalType: \"address\",\n          name: \"owner\",\n          type: \"address\",\n        },\n      ],\n      name: \"AddedOwner\",\n      type: \"event\",\n    },\n    {\n      anonymous: false,\n      inputs: [\n        {\n          indexed: true,\n          internalType: \"bytes32\",\n          name: \"approvedHash\",\n          type: \"bytes32\",\n        },\n        {\n          indexed: true,\n          internalType: \"address\",\n          name: \"owner\",\n          type: \"address\",\n        },\n      ],\n      name: \"ApproveHash\",\n      type: \"event\",\n    },\n    {\n      anonymous: false,\n      inputs: [\n        {\n          indexed: false,\n          internalType: \"address\",\n          name: \"handler\",\n          type: \"address\",\n        },\n      ],\n      name: \"ChangedFallbackHandler\",\n      type: \"event\",\n    },\n    {\n      anonymous: false,\n      inputs: [\n        {\n          indexed: false,\n          internalType: \"address\",\n          name: \"guard\",\n          type: \"address\",\n        },\n      ],\n      name: \"ChangedGuard\",\n      type: \"event\",\n    },\n    {\n      anonymous: false,\n      inputs: [\n        {\n          indexed: false,\n          internalType: \"uint256\",\n          name: \"threshold\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"ChangedThreshold\",\n      type: \"event\",\n    },\n    {\n      anonymous: false,\n      inputs: [\n        {\n          indexed: false,\n          internalType: \"address\",\n          name: \"module\",\n          type: \"address\",\n        },\n      ],\n      name: \"DisabledModule\",\n      type: \"event\",\n    },\n    {\n      anonymous: false,\n      inputs: [\n        {\n          indexed: false,\n          internalType: \"address\",\n          name: \"module\",\n          type: \"address\",\n        },\n      ],\n      name: \"EnabledModule\",\n      type: \"event\",\n    },\n    {\n      anonymous: false,\n      inputs: [\n        {\n          indexed: false,\n          internalType: \"bytes32\",\n          name: \"txHash\",\n          type: \"bytes32\",\n        },\n        {\n          indexed: false,\n          internalType: \"uint256\",\n          name: \"payment\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"ExecutionFailure\",\n      type: \"event\",\n    },\n    {\n      anonymous: false,\n      inputs: [\n        {\n          indexed: true,\n          internalType: \"address\",\n          name: \"module\",\n          type: \"address\",\n        },\n      ],\n      name: \"ExecutionFromModuleFailure\",\n      type: \"event\",\n    },\n    {\n      anonymous: false,\n      inputs: [\n        {\n          indexed: true,\n          internalType: \"address\",\n          name: \"module\",\n          type: \"address\",\n        },\n      ],\n      name: \"ExecutionFromModuleSuccess\",\n      type: \"event\",\n    },\n    {\n      anonymous: false,\n      inputs: [\n        {\n          indexed: false,\n          internalType: \"bytes32\",\n          name: \"txHash\",\n          type: \"bytes32\",\n        },\n        {\n          indexed: false,\n          internalType: \"uint256\",\n          name: \"payment\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"ExecutionSuccess\",\n      type: \"event\",\n    },\n    {\n      anonymous: false,\n      inputs: [\n        {\n          indexed: false,\n          internalType: \"address\",\n          name: \"owner\",\n          type: \"address\",\n        },\n      ],\n      name: \"RemovedOwner\",\n      type: \"event\",\n    },\n    {\n      anonymous: false,\n      inputs: [\n        {\n          indexed: true,\n          internalType: \"address\",\n          name: \"sender\",\n          type: \"address\",\n        },\n        {\n          indexed: false,\n          internalType: \"uint256\",\n          name: \"value\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"SafeReceived\",\n      type: \"event\",\n    },\n    {\n      anonymous: false,\n      inputs: [\n        {\n          indexed: true,\n          internalType: \"address\",\n          name: \"initiator\",\n          type: \"address\",\n        },\n        {\n          indexed: false,\n          internalType: \"address[]\",\n          name: \"owners\",\n          type: \"address[]\",\n        },\n        {\n          indexed: false,\n          internalType: \"uint256\",\n          name: \"threshold\",\n          type: \"uint256\",\n        },\n        {\n          indexed: false,\n          internalType: \"address\",\n          name: \"initializer\",\n          type: \"address\",\n        },\n        {\n          indexed: false,\n          internalType: \"address\",\n          name: \"fallbackHandler\",\n          type: \"address\",\n        },\n      ],\n      name: \"SafeSetup\",\n      type: \"event\",\n    },\n    {\n      anonymous: false,\n      inputs: [\n        {\n          indexed: true,\n          internalType: \"bytes32\",\n          name: \"msgHash\",\n          type: \"bytes32\",\n        },\n      ],\n      name: \"SignMsg\",\n      type: \"event\",\n    },\n    {\n      stateMutability: \"nonpayable\",\n      type: \"fallback\",\n    },\n    {\n      inputs: [],\n      name: \"VERSION\",\n      outputs: [\n        {\n          internalType: \"string\",\n          name: \"\",\n          type: \"string\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"owner\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"_threshold\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"addOwnerWithThreshold\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"bytes32\",\n          name: \"hashToApprove\",\n          type: \"bytes32\",\n        },\n      ],\n      name: \"approveHash\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"\",\n          type: \"address\",\n        },\n        {\n          internalType: \"bytes32\",\n          name: \"\",\n          type: \"bytes32\",\n        },\n      ],\n      name: \"approvedHashes\",\n      outputs: [\n        {\n          internalType: \"uint256\",\n          name: \"\",\n          type: \"uint256\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"uint256\",\n          name: \"_threshold\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"changeThreshold\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"bytes32\",\n          name: \"dataHash\",\n          type: \"bytes32\",\n        },\n        {\n          internalType: \"bytes\",\n          name: \"data\",\n          type: \"bytes\",\n        },\n        {\n          internalType: \"bytes\",\n          name: \"signatures\",\n          type: \"bytes\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"requiredSignatures\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"checkNSignatures\",\n      outputs: [],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"bytes32\",\n          name: \"dataHash\",\n          type: \"bytes32\",\n        },\n        {\n          internalType: \"bytes\",\n          name: \"data\",\n          type: \"bytes\",\n        },\n        {\n          internalType: \"bytes\",\n          name: \"signatures\",\n          type: \"bytes\",\n        },\n      ],\n      name: \"checkSignatures\",\n      outputs: [],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"prevModule\",\n          type: \"address\",\n        },\n        {\n          internalType: \"address\",\n          name: \"module\",\n          type: \"address\",\n        },\n      ],\n      name: \"disableModule\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [],\n      name: \"domainSeparator\",\n      outputs: [\n        {\n          internalType: \"bytes32\",\n          name: \"\",\n          type: \"bytes32\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"module\",\n          type: \"address\",\n        },\n      ],\n      name: \"enableModule\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"to\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"value\",\n          type: \"uint256\",\n        },\n        {\n          internalType: \"bytes\",\n          name: \"data\",\n          type: \"bytes\",\n        },\n        {\n          internalType: \"enum Enum.Operation\",\n          name: \"operation\",\n          type: \"uint8\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"safeTxGas\",\n          type: \"uint256\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"baseGas\",\n          type: \"uint256\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"gasPrice\",\n          type: \"uint256\",\n        },\n        {\n          internalType: \"address\",\n          name: \"gasToken\",\n          type: \"address\",\n        },\n        {\n          internalType: \"address\",\n          name: \"refundReceiver\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"_nonce\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"encodeTransactionData\",\n      outputs: [\n        {\n          internalType: \"bytes\",\n          name: \"\",\n          type: \"bytes\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"to\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"value\",\n          type: \"uint256\",\n        },\n        {\n          internalType: \"bytes\",\n          name: \"data\",\n          type: \"bytes\",\n        },\n        {\n          internalType: \"enum Enum.Operation\",\n          name: \"operation\",\n          type: \"uint8\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"safeTxGas\",\n          type: \"uint256\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"baseGas\",\n          type: \"uint256\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"gasPrice\",\n          type: \"uint256\",\n        },\n        {\n          internalType: \"address\",\n          name: \"gasToken\",\n          type: \"address\",\n        },\n        {\n          internalType: \"address payable\",\n          name: \"refundReceiver\",\n          type: \"address\",\n        },\n        {\n          internalType: \"bytes\",\n          name: \"signatures\",\n          type: \"bytes\",\n        },\n      ],\n      name: \"execTransaction\",\n      outputs: [\n        {\n          internalType: \"bool\",\n          name: \"success\",\n          type: \"bool\",\n        },\n      ],\n      stateMutability: \"payable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"to\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"value\",\n          type: \"uint256\",\n        },\n        {\n          internalType: \"bytes\",\n          name: \"data\",\n          type: \"bytes\",\n        },\n        {\n          internalType: \"enum Enum.Operation\",\n          name: \"operation\",\n          type: \"uint8\",\n        },\n      ],\n      name: \"execTransactionFromModule\",\n      outputs: [\n        {\n          internalType: \"bool\",\n          name: \"success\",\n          type: \"bool\",\n        },\n      ],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"to\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"value\",\n          type: \"uint256\",\n        },\n        {\n          internalType: \"bytes\",\n          name: \"data\",\n          type: \"bytes\",\n        },\n        {\n          internalType: \"enum Enum.Operation\",\n          name: \"operation\",\n          type: \"uint8\",\n        },\n      ],\n      name: \"execTransactionFromModuleReturnData\",\n      outputs: [\n        {\n          internalType: \"bool\",\n          name: \"success\",\n          type: \"bool\",\n        },\n        {\n          internalType: \"bytes\",\n          name: \"returnData\",\n          type: \"bytes\",\n        },\n      ],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [],\n      name: \"getChainId\",\n      outputs: [\n        {\n          internalType: \"uint256\",\n          name: \"\",\n          type: \"uint256\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"start\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"pageSize\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"getModulesPaginated\",\n      outputs: [\n        {\n          internalType: \"address[]\",\n          name: \"array\",\n          type: \"address[]\",\n        },\n        {\n          internalType: \"address\",\n          name: \"next\",\n          type: \"address\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [],\n      name: \"getOwners\",\n      outputs: [\n        {\n          internalType: \"address[]\",\n          name: \"\",\n          type: \"address[]\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"uint256\",\n          name: \"offset\",\n          type: \"uint256\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"length\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"getStorageAt\",\n      outputs: [\n        {\n          internalType: \"bytes\",\n          name: \"\",\n          type: \"bytes\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [],\n      name: \"getThreshold\",\n      outputs: [\n        {\n          internalType: \"uint256\",\n          name: \"\",\n          type: \"uint256\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"to\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"value\",\n          type: \"uint256\",\n        },\n        {\n          internalType: \"bytes\",\n          name: \"data\",\n          type: \"bytes\",\n        },\n        {\n          internalType: \"enum Enum.Operation\",\n          name: \"operation\",\n          type: \"uint8\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"safeTxGas\",\n          type: \"uint256\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"baseGas\",\n          type: \"uint256\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"gasPrice\",\n          type: \"uint256\",\n        },\n        {\n          internalType: \"address\",\n          name: \"gasToken\",\n          type: \"address\",\n        },\n        {\n          internalType: \"address\",\n          name: \"refundReceiver\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"_nonce\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"getTransactionHash\",\n      outputs: [\n        {\n          internalType: \"bytes32\",\n          name: \"\",\n          type: \"bytes32\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"module\",\n          type: \"address\",\n        },\n      ],\n      name: \"isModuleEnabled\",\n      outputs: [\n        {\n          internalType: \"bool\",\n          name: \"\",\n          type: \"bool\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"owner\",\n          type: \"address\",\n        },\n      ],\n      name: \"isOwner\",\n      outputs: [\n        {\n          internalType: \"bool\",\n          name: \"\",\n          type: \"bool\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [],\n      name: \"nonce\",\n      outputs: [\n        {\n          internalType: \"uint256\",\n          name: \"\",\n          type: \"uint256\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"prevOwner\",\n          type: \"address\",\n        },\n        {\n          internalType: \"address\",\n          name: \"owner\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"_threshold\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"removeOwner\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"to\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"value\",\n          type: \"uint256\",\n        },\n        {\n          internalType: \"bytes\",\n          name: \"data\",\n          type: \"bytes\",\n        },\n        {\n          internalType: \"enum Enum.Operation\",\n          name: \"operation\",\n          type: \"uint8\",\n        },\n      ],\n      name: \"requiredTxGas\",\n      outputs: [\n        {\n          internalType: \"uint256\",\n          name: \"\",\n          type: \"uint256\",\n        },\n      ],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"handler\",\n          type: \"address\",\n        },\n      ],\n      name: \"setFallbackHandler\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"guard\",\n          type: \"address\",\n        },\n      ],\n      name: \"setGuard\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address[]\",\n          name: \"_owners\",\n          type: \"address[]\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"_threshold\",\n          type: \"uint256\",\n        },\n        {\n          internalType: \"address\",\n          name: \"to\",\n          type: \"address\",\n        },\n        {\n          internalType: \"bytes\",\n          name: \"data\",\n          type: \"bytes\",\n        },\n        {\n          internalType: \"address\",\n          name: \"fallbackHandler\",\n          type: \"address\",\n        },\n        {\n          internalType: \"address\",\n          name: \"paymentToken\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"payment\",\n          type: \"uint256\",\n        },\n        {\n          internalType: \"address payable\",\n          name: \"paymentReceiver\",\n          type: \"address\",\n        },\n      ],\n      name: \"setup\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"bytes32\",\n          name: \"\",\n          type: \"bytes32\",\n        },\n      ],\n      name: \"signedMessages\",\n      outputs: [\n        {\n          internalType: \"uint256\",\n          name: \"\",\n          type: \"uint256\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"targetContract\",\n          type: \"address\",\n        },\n        {\n          internalType: \"bytes\",\n          name: \"calldataPayload\",\n          type: \"bytes\",\n        },\n      ],\n      name: \"simulateAndRevert\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"prevOwner\",\n          type: \"address\",\n        },\n        {\n          internalType: \"address\",\n          name: \"oldOwner\",\n          type: \"address\",\n        },\n        {\n          internalType: \"address\",\n          name: \"newOwner\",\n          type: \"address\",\n        },\n      ],\n      name: \"swapOwner\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      stateMutability: \"payable\",\n      type: \"receive\",\n    },\n  ];\n","import React, { useCallback, useState } from 'react'\nimport styled from 'styled-components'\nimport { Button, Card, Divider, Loader, Title } from '@gnosis.pm/safe-react-components'\nimport { useSafeAppsSDK } from '@gnosis.pm/safe-apps-react-sdk'\nimport OpenseaBulkPurchaser from '@gsgalloway/opensea-bulk-purchaser';\nimport { BigNumber, providers, Contract } from 'ethers';\nimport NFTForm from './NFTForm';\nimport ManageListModal from './ManageListModal';\nimport TokenList from './TokenList';\nimport { TokenDescription } from './types';\nimport { Network as OpenseaNetwork } from 'opensea-js';\nimport { signHash, calculateSafeTransactionHash } from \"@gnosis.pm/safe-contracts\";\nimport { gnosisSafeABI } from './gnosis-abi';\nimport SafeServiceClient from '@gnosis.pm/safe-service-client'\nimport EthSafeTransaction from '@gnosis.pm/safe-core-sdk/dist/src/utils/transactions/SafeTransaction';\nimport { EthSignSignature } from '@gnosis.pm/safe-core-sdk';\nimport { Provider, Network, Web3Provider } from '@ethersproject/providers';\nimport { useQuery } from 'react-query';\n\nconst Container = styled.div`\n  padding: 1rem;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n`\n\nconst loadNetwork = async (provider: Provider): Promise<Network> => {\n  return await provider.getNetwork();\n}\n\nconst getProvider = (): Web3Provider => {\n  const provider = new providers.Web3Provider((window as any).ethereum)\n  if (!provider) {\n    throw new Error(\"no ethereum provider registered\");\n  }\n  return provider;\n}\n\nconst getOpenseaParams = (network: Network): {openseaApiKey: string, openseaNetworkName: OpenseaNetwork} => {\n  const networkName = network.name;\n\n  let openseaApiKey: string;\n  if (networkName === \"mainnet\" || networkName === \"homestead\") {\n    if (!process.env.REACT_APP_OPENSEA_API_KEY) {\n      throw new Error(\"must define REACT_APP_OPENSEA_API_KEY\");\n    }\n    openseaApiKey = process.env.REACT_APP_OPENSEA_API_KEY\n  } else {\n    if (!process.env.REACT_APP_RINKEBY_OPENSEA_API_KEY) {\n      throw new Error(\"must define REACT_APP_RINKEBY_OPENSEA_API_KEY\");\n    }\n    openseaApiKey = process.env.REACT_APP_RINKEBY_OPENSEA_API_KEY\n  }\n\n  let openseaNetworkName: OpenseaNetwork;\n  switch (networkName) {\n    case \"mainnet\":\n    case \"homestead\":\n      openseaNetworkName = OpenseaNetwork.Main;\n      break;\n    case \"rinkeby\":\n      openseaNetworkName = OpenseaNetwork.Rinkeby;\n      break;\n    default:\n      throw new Error(\n        `network ${networkName} is not supported by opensea-js`\n      );\n  }\n  return {\n    openseaApiKey,\n    openseaNetworkName,\n  }\n}\n\nconst SafeApp = (): React.ReactElement => {\n  const { safe } = useSafeAppsSDK();\n  const [isOpen, setIsOpen] = useState(false);\n  const [tokens, setTokens] = useState<TokenDescription[]>([])\n  const [inputTokenID, setInputTokenID] = useState('');\n  const [inputTokenContractAddress, setInputTokenContractAddress] = useState('');\n  const [isTransactionBuilderLoading, setIsTransactionBuilderLoading] = useState(false);\n\n  const submitTx = useCallback(async () => {\n    try {\n      setIsTransactionBuilderLoading(true);\n      await (window as any).ethereum.enable();\n      const provider = getProvider();\n      const network = await provider.getNetwork();\n      const signer = provider.getSigner();\n\n      const {openseaApiKey, openseaNetworkName} = getOpenseaParams(network);\n      const openseaBulkPurchaser = new OpenseaBulkPurchaser(provider, {openseaApiKey, network: openseaNetworkName});\n      const purchaseTxs = await Promise.all(tokens.map(token => {\n        return openseaBulkPurchaser.createSingleTokenPurchase(token.id, token.contractAddress, safe.safeAddress)\n      }));\n\n      const batchTx = await openseaBulkPurchaser.createBatchTransactionFromPurchases(purchaseTxs, safe.safeAddress);\n      const safeContract = new Contract(safe.safeAddress, gnosisSafeABI, provider);\n\n      const safeTxHash = calculateSafeTransactionHash(safeContract, batchTx, network.chainId);\n\n      const signature = await signHash(signer, safeTxHash);\n\n      let safeServiceURL = 'https://safe-transaction.gnosis.io';\n      if (network.name === 'rinkeby') {\n        safeServiceURL = 'https://safe-transaction.rinkeby.gnosis.io';\n      }\n      const safeService = new SafeServiceClient(safeServiceURL);\n\n      const ethSafeTx = new EthSafeTransaction({\n        baseGas: BigNumber.from(batchTx.baseGas).toNumber(),\n        data: batchTx.data,\n        gasPrice: BigNumber.from(batchTx.gasPrice).toNumber(),\n        gasToken: batchTx.gasToken,\n        nonce: BigNumber.from(batchTx.nonce).toNumber(),\n        operation: batchTx.operation,\n        refundReceiver: batchTx.refundReceiver,\n        safeTxGas: BigNumber.from(batchTx.safeTxGas).toNumber(),\n        to: batchTx.to,\n        value: BigNumber.from(batchTx.value).toString(),\n      })\n      ethSafeTx.addSignature(new EthSignSignature(signature.signer, signature.data));\n\n      await safeService.proposeTransaction({\n        safeAddress: safe.safeAddress,\n        safeTransaction: ethSafeTx,\n        senderAddress: await signer.getAddress(),\n        safeTxHash: safeTxHash,\n      })\n\n      alert(\"Transaction proposed! Please review and execute on the Transactions tab in the Gnosis UI.\")\n    }\n    catch (e) {\n      console.error(e);\n      alert(e);\n    }\n    finally {\n      setIsTransactionBuilderLoading(false);\n    }\n  }, [tokens, safe])\n\n  const provider = getProvider();\n\n  const { isLoading: isNetworkLoading, data: network, error } = useQuery(['loadNetwork'], () => loadNetwork(provider))\n  if (isNetworkLoading) {\n      return <Loader size=\"lg\" />\n  }\n  if (error) {\n      alert(error);\n      return <></>;\n  }\n  if (network === undefined) {\n      throw new Error(\"network is undefined\")\n  }\n\n  const {openseaApiKey, openseaNetworkName} = getOpenseaParams(network);\n\n  const onNFTFormSubmitted = () => {\n    setTokens([...tokens, {id: BigNumber.from(inputTokenID), contractAddress: inputTokenContractAddress}])\n  }\n\n  const onItemDeleted = (itemId: number | string): void => {\n    if (typeof(itemId) === 'string') {\n      throw new Error(`itemID ${itemId} should be number`)\n    }\n    const newTokens = [...tokens];\n    newTokens.splice(itemId, 1)\n    setTokens(newTokens);\n  }\n\n\n  const getListItems = () => {\n    return Array.from(tokens.entries()).map(([index, token]) => {\n      return {\n            id: index,\n            iconUrl: 'someUrl',\n            name: `${token.id}`,\n            description: `Token at ${token.contractAddress}`,\n            checked: true,\n            isDeletable: true,\n      };\n    })\n  }\n\n  return (\n    <Container>\n      {isTransactionBuilderLoading && (\n        <Loader size={\"lg\"} />\n      )}\n\n      <Title size=\"md\">New Batch OpenSea Purchase</Title>\n\n      {tokens.length > 0 && (\n        <Card>\n          <TokenList tokens={tokens} network={openseaNetworkName} apiKey={openseaApiKey}/>\n        </Card>\n      )}\n\n      <br />\n\n      <Button size=\"lg\" color=\"primary\" onClick={() => setIsOpen(!isOpen)}>\n        1. Select NFTs\n      </Button>\n      {isOpen && (\n        <ManageListModal\n          title={\"Add Token\"}\n          defaultIconUrl={\"https://opensea.io/static/images/logos/opensea.svg\"}\n          itemList={getListItems()}\n          showDeleteButton\n          addButtonLabel=\"Add token to batch\"\n          formBody={<NFTForm\n            tokenID={inputTokenID}\n            tokenContractAddress={inputTokenContractAddress}\n            onTokenIDChanged={setInputTokenID}\n            onTokenContractAddressChanged={setInputTokenContractAddress}\n          />}\n          onSubmitForm={onNFTFormSubmitted}\n          onClose={() => setIsOpen(false)}\n          onItemToggle={() => undefined}\n          onItemDeleted={onItemDeleted}\n        />\n      )}\n\n      <Divider />\n\n      <Button size=\"lg\" color=\"primary\" onClick={submitTx}>\n        2. Construct Batch Transaction\n      </Button>\n\n    </Container>\n  )\n}\n\nexport default SafeApp\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { ThemeProvider } from 'styled-components'\nimport { theme, Loader, Title } from '@gnosis.pm/safe-react-components'\nimport SafeProvider from '@gnosis.pm/safe-apps-react-sdk'\nimport {\n  QueryClient,\n  QueryClientProvider,\n} from 'react-query';\n\nimport GlobalStyle from './GlobalStyle'\nimport App from './App'\n\nconst queryClient = new QueryClient()\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <GlobalStyle />\n      <SafeProvider\n        loader={\n          <>\n            <Title size=\"md\">Waiting for Safe...</Title>\n            <Loader size=\"md\" />\n          </>\n        }\n      >\n        <QueryClientProvider client={queryClient}>\n          <App />\n        </QueryClientProvider>\n      </SafeProvider>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}